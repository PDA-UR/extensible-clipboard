name: Debian Build

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7.6]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install and run
      run: |
        cd ./packaged
        python3 -m venv venv
        source venv/bin/activate
        pip3 install --upgrade pip
        pip3 install -r requirements.txt
        python3 -m fbs freeze

        cd ..
        sudo apt-get install zip
        mkdir dist
        mkdir dist/build
        mkdir dist/build/ExtensibleClipboard
        cp -r ./packaged/target/ExtensibleCliboard ./dist/build/ExtensibleClipboard
        zip -r ./dist/release.zip ./dist/build/ExtensibleClipboard
    - name: Archive build
      uses: actions/upload-artifact@v1
      with:
        name: Release
        path: dist/release.zip

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./dist/release.zip
        asset_name: release.zip
        asset_content_type: application/zip
#    - name: Build
#      run: |
#        cd ./packaged
#        ls
#        source venv/bin/activate
#        python3 -m fbs freeze
#    - name: Lint with flake8
#      run: |
#        pip install flake8
#        # stop the build if there are Python syntax errors or undefined names
#        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#    - name: Test with pytest
#      run: |
#        pip install pytest
#        pytest
